<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Comtrade</name>
    </assembly>
    <members>
        <member name="T:Comtrade.AnalogChannel">
            <summary>
            Represents an analog channel definition of the <see cref="T:Comtrade.Schema"/>.
            </summary>
        </member>
        <member name="M:Comtrade.AnalogChannel.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Comtrade.AnalogChannel"/>.
            </summary>
        </member>
        <member name="M:Comtrade.AnalogChannel.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Comtrade.AnalogChannel"/> from an existing line image.
            </summary>
            <param name="lineImage">Line image to parse.</param>
        </member>
        <member name="M:Comtrade.AnalogChannel.ToString">
            <summary>
            Converts <see cref="T:Comtrade.AnalogChannel"/> to its string format.
            </summary>
        </member>
        <member name="P:Comtrade.AnalogChannel.Index">
            <summary>
            Gets or sets index of this <see cref="T:Comtrade.AnalogChannel"/>.
            </summary>
        </member>
        <member name="P:Comtrade.AnalogChannel.Name">
            <summary>
            Gets or sets name of this <see cref="T:Comtrade.AnalogChannel"/> formatted as station_name:channel_name.
            </summary>
            <exception cref="T:System.FormatException">Name must be formatted as station_name:channel_name.</exception>
        </member>
        <member name="P:Comtrade.AnalogChannel.StationName">
            <summary>
            Gets or sets station name component of this <see cref="T:Comtrade.AnalogChannel"/>.
            </summary>
        </member>
        <member name="P:Comtrade.AnalogChannel.ChannelName">
            <summary>
            Gets or sets channel name component of this <see cref="T:Comtrade.AnalogChannel"/>.
            </summary>
        </member>
        <member name="P:Comtrade.AnalogChannel.PhaseID">
            <summary>
            Gets or sets the 2-character phase identifier for this <see cref="T:Comtrade.AnalogChannel"/>.
            </summary>
        </member>
        <member name="P:Comtrade.AnalogChannel.PhaseDesignation">
            <summary>
            Gets or sets phase designation of this <see cref="T:Comtrade.AnalogChannel"/>.
            </summary>
            <exception cref="T:System.ArgumentException">Value is not a valid phase designation.</exception>
        </member>
        <member name="P:Comtrade.AnalogChannel.PhasorType">
            <summary>
            Gets or sets phasor type of this <see cref="T:Comtrade.AnalogChannel"/>, if applicable.
            </summary>
        </member>
        <member name="P:Comtrade.AnalogChannel.NominalFrequency">
            <summary>
            Gets or sets nominal frequency of this <see cref="T:Comtrade.AnalogChannel"/>.
            </summary>
        </member>
        <member name="P:Comtrade.AnalogChannel.SignalKind">
            <summary>
            Gets or sets signal kind of this <see cref="T:Comtrade.AnalogChannel"/>.
            </summary>
            <exception cref="T:System.ArgumentException">Value is not a valid analog signal kind.</exception>
        </member>
        <member name="P:Comtrade.AnalogChannel.CoordinateFormat">
            <summary>
            Gets or sets coordinate format of this <see cref="T:Comtrade.AnalogChannel"/>.
            </summary>
        </member>
        <member name="P:Comtrade.AnalogChannel.CircuitComponent">
            <summary>
            Gets or sets circuit component of this <see cref="T:Comtrade.AnalogChannel"/>.
            </summary>
        </member>
        <member name="P:Comtrade.AnalogChannel.Units">
            <summary>
            Gets or sets units of this <see cref="T:Comtrade.AnalogChannel"/>.
            </summary>
        </member>
        <member name="P:Comtrade.AnalogChannel.Multiplier">
            <summary>
            Gets or sets value multipler of this <see cref="T:Comtrade.AnalogChannel"/>.
            </summary>
        </member>
        <member name="P:Comtrade.AnalogChannel.Adder">
            <summary>
            Gets or sets adder of this <see cref="T:Comtrade.AnalogChannel"/>.
            </summary>
        </member>
        <member name="P:Comtrade.AnalogChannel.Skew">
            <summary>
            Gets or sets time skew between channels of this <see cref="T:Comtrade.AnalogChannel"/>.
            </summary>
        </member>
        <member name="P:Comtrade.AnalogChannel.MinValue">
            <summary>
            Gets or sets minimum unscaled value of this <see cref="T:Comtrade.AnalogChannel"/>.
            </summary>
        </member>
        <member name="P:Comtrade.AnalogChannel.MaxValue">
            <summary>
            Gets or sets maximum unscaled value of this <see cref="T:Comtrade.AnalogChannel"/>.
            </summary>
        </member>
        <member name="P:Comtrade.AnalogChannel.PrimaryRatio">
            <summary>
            Gets or sets the channel voltage or current transformer ratio primary factor of this <see cref="T:Comtrade.AnalogChannel"/>.
            </summary>
        </member>
        <member name="P:Comtrade.AnalogChannel.SecondaryRatio">
            <summary>
            Gets or sets the channel voltage or current transformer ratio secondary factor of this <see cref="T:Comtrade.AnalogChannel"/>.
            </summary>
        </member>
        <member name="P:Comtrade.AnalogChannel.ScalingIdentifier">
            <summary>
            Gets or sets the the primary or secondary data scaling identifer of this <see cref="T:Comtrade.AnalogChannel"/>.
            </summary>
        </member>
        <member name="T:Comtrade.ChannelMetadata">
            <summary>
            Defines a minimal set of channel metadata for a COMTRADE config file.
            </summary>
        </member>
        <member name="F:Comtrade.ChannelMetadata.Name">
            <summary>
            Channel name.
            </summary>
        </member>
        <member name="F:Comtrade.ChannelMetadata.SignalType">
            <summary>
            Channel signal type.
            </summary>
        </member>
        <member name="F:Comtrade.ChannelMetadata.IsDigital">
            <summary>
            Determines if channel is a digital.
            </summary>
            <remarks>
            Channel is assumed to be an analog if field is <c>false</c>.
            </remarks>
        </member>
        <member name="T:Comtrade.ChannelMetadataSorter">
            <summary>
            Defines a comparison class to property sort metadata.
            </summary>
        </member>
        <member name="M:Comtrade.ChannelMetadataSorter.Compare(Comtrade.ChannelMetadata,Comtrade.ChannelMetadata)">
            <summary>
            Compares one metadata record to another.
            </summary>
            <param name="left">Left metadata record to compare.</param>
            <param name="right">Right metadata record to compare.</param>
            <returns>Comparison sort order of metadata record.</returns>
        </member>
        <member name="F:Comtrade.ChannelMetadataSorter.Default">
            <summary>
            Default instance of the metadata record sorter.
            </summary>
        </member>
        <member name="T:Comtrade.Parser">
            <summary>
            COMTRADE data file(s) parser.
            </summary>
        </member>
        <member name="M:Comtrade.Parser.#ctor">
            <summary>
            Creates a new instance of the COMTRADE <see cref="T:Comtrade.Parser"/>.
            </summary>
        </member>
        <member name="M:Comtrade.Parser.Finalize">
            <summary>
            Releases the unmanaged resources before the <see cref="T:Comtrade.Parser"/> object is reclaimed by <see cref="T:System.GC"/>.
            </summary>
        </member>
        <member name="M:Comtrade.Parser.Dispose">
            <summary>
            Releases all the resources used by the <see cref="T:Comtrade.Parser"/> object.
            </summary>
        </member>
        <member name="M:Comtrade.Parser.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:Comtrade.Parser"/> object and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Comtrade.Parser.OpenFiles">
            <summary>
            Opens all COMTRADE data file streams.
            </summary>
        </member>
        <member name="M:Comtrade.Parser.CloseFiles">
            <summary>
            Closes all COMTRADE data file streams.
            </summary>
        </member>
        <member name="M:Comtrade.Parser.ReadNext">
            <summary>
            Reads next COMTRADE record.
            </summary>
            <returns><c>true</c> if read succeeded; otherwise <c>false</c> if end of data set was reached.</returns>
        </member>
        <member name="P:Comtrade.Parser.Schema">
            <summary>
            Gets or sets associated COMTRADE schema for this <see cref="T:Comtrade.Parser"/>.
            </summary>
        </member>
        <member name="P:Comtrade.Parser.FileName">
            <summary>
            Gets or sets COMTRADE data filename. If there are more than one data files in a set, this should be set to first file name in the set, e.g., DATA123.D00.
            </summary>
        </member>
        <member name="P:Comtrade.Parser.InferTimeFromSampleRates">
            <summary>
            Gets or sets flag that determines if time should be inferred from sample rates.
            </summary>
        </member>
        <member name="P:Comtrade.Parser.Timestamp">
            <summary>
            Gets timestamp of current record.
            </summary>
        </member>
        <member name="P:Comtrade.Parser.Values">
            <summary>
            Gets values of current record.
            </summary>
        </member>
        <member name="T:Comtrade.Timestamp">
            <summary>
            Represents a timestamp in the COMTRADE file standard format, IEEE Std C37.111-1999..
            </summary>
        </member>
        <member name="F:Comtrade.Timestamp.Value">
            <summary>
            Timestamp in ticks.
            </summary>
        </member>
        <member name="M:Comtrade.Timestamp.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Comtrade.Timestamp"/> from an existing line image.
            </summary>
            <param name="lineImage">Line image to parse.</param>
        </member>
        <member name="M:Comtrade.Timestamp.ToString">
            <summary>
            Converts <see cref="T:Comtrade.Timestamp"/> to its string format.
            </summary>
        </member>
        <member name="T:Comtrade.DigitalChannel">
            <summary>
            Represents a digital channel definition of the <see cref="T:Comtrade.Schema"/>.
            </summary>
        </member>
        <member name="M:Comtrade.DigitalChannel.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Comtrade.DigitalChannel"/>.
            </summary>
        </member>
        <member name="M:Comtrade.DigitalChannel.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Comtrade.DigitalChannel"/> from an existing line image.
            </summary>
            <param name="lineImage">Line image to parse.</param>
        </member>
        <member name="M:Comtrade.DigitalChannel.ToString">
            <summary>
            Converts <see cref="T:Comtrade.DigitalChannel"/> to its string format.
            </summary>
        </member>
        <member name="P:Comtrade.DigitalChannel.Index">
            <summary>
            Gets or sets index of this <see cref="T:Comtrade.DigitalChannel"/>.
            </summary>
        </member>
        <member name="P:Comtrade.DigitalChannel.Name">
            <summary>
            Gets or sets name of this <see cref="T:Comtrade.DigitalChannel"/> formatted as station_name:channel_name.
            </summary>
            <exception cref="T:System.FormatException">Name must be formatted as station_name:channel_name.</exception>
        </member>
        <member name="P:Comtrade.DigitalChannel.StationName">
            <summary>
            Gets or sets station name component of this <see cref="T:Comtrade.DigitalChannel"/>.
            </summary>
        </member>
        <member name="P:Comtrade.DigitalChannel.ChannelName">
            <summary>
            Gets or sets channel name component of this <see cref="T:Comtrade.DigitalChannel"/>.
            </summary>
        </member>
        <member name="P:Comtrade.DigitalChannel.PhaseID">
            <summary>
            Gets or sets the 2-character phase identifier for this <see cref="T:Comtrade.DigitalChannel"/>.
            </summary>
        </member>
        <member name="P:Comtrade.DigitalChannel.CircuitComponent">
            <summary>
            Gets or sets circuit component of this <see cref="T:Comtrade.DigitalChannel"/>.
            </summary>
        </member>
        <member name="P:Comtrade.DigitalChannel.NormalState">
            <summary>
            Gets or sets normal state of this <see cref="T:Comtrade.DigitalChannel"/>.
            </summary>
        </member>
        <member name="T:Comtrade.FileExporter">
            <summary>
            Represents an action adapter that exports measurements on an interval to a COMTRADE formatted file that can be imported into other systems for analysis.
            </summary>
        </member>
        <member name="F:Comtrade.FileExporter.m_stationName">
            Fields
        </member>
        <member name="M:Comtrade.FileExporter.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:Comtrade.FileExporter"/> object and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Comtrade.FileExporter.Initialize">
            <summary>
            Initializes <see cref="T:Comtrade.FileExporter"/>.
            </summary>
        </member>
        <member name="M:Comtrade.FileExporter.PublishFrame(GSF.TimeSeries.IFrame,System.Int32)">
            <summary>
            Process frame of time-aligned measurements that arrived within the defined lag time.
            </summary>
            <param name="frame"><see cref="T:GSF.TimeSeries.IFrame"/> of measurements that arrived within lag time and are ready for processing.</param>
            <param name="index">Index of <see cref="T:GSF.TimeSeries.IFrame"/> within one second of data ranging from zero to frames per second - 1.</param>
        </member>
        <member name="P:Comtrade.FileExporter.StationName">
            <summary>
            Gets or sets station name to use in COMTRADE configuration file.
            </summary>
        </member>
        <member name="P:Comtrade.FileExporter.DeviceID">
            <summary>
            Gets or sets device ID to use in COMTRADE configuration file.
            </summary>
        </member>
        <member name="P:Comtrade.FileExporter.SupportsTemporalProcessing">
            <summary>
            Gets the flag indicating if this adapter supports temporal processing.
            </summary>
        </member>
        <member name="P:Comtrade.FileExporter.Status">
            <summary>
            Returns the detailed status of the <see cref="T:Comtrade.FileExporter"/>.
            </summary>
        </member>
        <member name="T:Comtrade.FileType">
            <summary>
            <see cref="T:Comtrade.Schema"/> file type enumeration.
            </summary>
        </member>
        <member name="F:Comtrade.FileType.Ascii">
            <summary>
            ASCII file type.
            </summary>
        </member>
        <member name="F:Comtrade.FileType.Binary">
            <summary>
            Binary file type.
            </summary>
        </member>
        <member name="T:Comtrade.Schema">
            <summary>
            Represents the schema for a configuration file in the COMTRADE file standard, IEEE Std C37.111-1999.
            </summary>
        </member>
        <member name="M:Comtrade.Schema.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Comtrade.Schema"/>.
            </summary>
        </member>
        <member name="M:Comtrade.Schema.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Comtrade.Schema"/> from an existing configuration file name.
            </summary>
            <param name="fileName">File name of configuration file to parse.</param>
        </member>
        <member name="P:Comtrade.Schema.StationName">
            <summary>
            Gets or sets free-form station name for this <see cref="T:Comtrade.Schema"/>.
            </summary>
        </member>
        <member name="P:Comtrade.Schema.DeviceID">
            <summary>
            Gets or sets free-form device ID for this <see cref="T:Comtrade.Schema"/>.
            </summary>
        </member>
        <member name="P:Comtrade.Schema.Version">
            <summary>
            Gets or sets version number of the IEEE Std C37.111 used by this <see cref="T:Comtrade.Schema"/>.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">Only IEEE Std C37.111 version 1999 is supported by this implementation of the phasor data schema.</exception>
        </member>
        <member name="P:Comtrade.Schema.TotalChannels">
            <summary>
            Gets total number of analog and digital channels of this <see cref="T:Comtrade.Schema"/>.
            </summary>
        </member>
        <member name="P:Comtrade.Schema.TotalAnalogChannels">
            <summary>
            Gets total number of analog channels of this <see cref="T:Comtrade.Schema"/>.
            </summary>
        </member>
        <member name="P:Comtrade.Schema.TotalDigitalChannels">
            <summary>
            Gets total number of digital channels of this <see cref="T:Comtrade.Schema"/>.
            </summary>
        </member>
        <member name="P:Comtrade.Schema.AnalogChannels">
            <summary>
            Gets or sets analog channels of this <see cref="T:Comtrade.Schema"/>.
            </summary>
        </member>
        <member name="P:Comtrade.Schema.DigitalChannels">
            <summary>
            Gets or sets digital channels of this <see cref="T:Comtrade.Schema"/>.
            </summary>
        </member>
        <member name="P:Comtrade.Schema.NominalFrequency">
            <summary>
            Gets or sets nominal frequency of this <see cref="T:Comtrade.Schema"/>.
            </summary>
        </member>
        <member name="P:Comtrade.Schema.TotalSampleRates">
            <summary>
            Gets total number of sample rates of this <see cref="T:Comtrade.Schema"/>.
            </summary>
        </member>
        <member name="P:Comtrade.Schema.SampleRates">
            <summary>
            Gets or sets sampling rates of this <see cref="T:Comtrade.Schema"/>. A file of phasor data will normally be made using a single sampling rate, so this will usually be 1.
            </summary>
        </member>
        <member name="P:Comtrade.Schema.StartTime">
            <summary>
            Gets or sets start timestamp of this <see cref="T:Comtrade.Schema"/>.
            </summary>
        </member>
        <member name="P:Comtrade.Schema.TriggerTime">
            <summary>
            Gets or sets trigger timestamp of this <see cref="T:Comtrade.Schema"/>.
            </summary>
        </member>
        <member name="P:Comtrade.Schema.FileType">
            <summary>
            Gets or sets file type of this <see cref="T:Comtrade.Schema"/>.
            </summary>
        </member>
        <member name="P:Comtrade.Schema.TimeFactor">
            <summary>
            Gets or sets the multiplication factor for the time differential (timestamp) field in this <see cref="T:Comtrade.Schema"/>.
            </summary>
        </member>
        <member name="P:Comtrade.Schema.DigitalWords">
            <summary>
            Gets the total digital words for given number of digital values when the file type is binary.
            </summary>
        </member>
        <member name="P:Comtrade.Schema.BinaryRecordLength">
            <summary>
            Calculates the size of a record, in bytes, when the file type is binary.
            </summary>
        </member>
        <member name="P:Comtrade.Schema.FileImage">
            <summary>
            Gets the file image of this <see cref="T:Comtrade.Schema"/>.
            </summary>
        </member>
        <member name="T:Comtrade.SampleRate">
            <summary>
            Represents a sample rate with associated ending sample using the COMTRADE file standard, IEEE Std C37.111-1999.
            </summary>
        </member>
        <member name="F:Comtrade.SampleRate.Rate">
            <summary>
            Sample rate in Hertz (Hz).
            </summary>
        </member>
        <member name="F:Comtrade.SampleRate.EndSample">
            <summary>
            Last sample number at sample rate.
            </summary>
        </member>
        <member name="M:Comtrade.SampleRate.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Comtrade.SampleRate"/> from an existing line image.
            </summary>
            <param name="lineImage">Line image to parse.</param>
        </member>
        <member name="M:Comtrade.SampleRate.ToString">
            <summary>
            Converts <see cref="T:Comtrade.SampleRate"/> to its string format.
            </summary>
        </member>
        <member name="T:Comtrade.Writer">
            <summary>
            COMTRADE data and config file writer.
            </summary>
        </member>
        <member name="M:Comtrade.Writer.CreateSchema(System.Collections.Generic.IEnumerable{Comtrade.ChannelMetadata},System.String,System.String,GSF.Ticks,System.Int32,System.Boolean,System.Double,System.Double,GSF.PhasorProtocols.LineFrequency,System.Boolean)">
            <summary>
            Creates a new COMTRADE configuration <see cref="T:Comtrade.Schema"/>.
            </summary>
            <param name="metadata">Schema <see cref="T:Comtrade.ChannelMetadata"/> records.</param>
            <param name="stationName">Station name for the schema.</param>
            <param name="deviceID">Device ID for the schema.</param>
            <param name="dataStartTime">Data start time.</param>
            <param name="sampleCount">Total data samples (i.e., total number of rows).</param>
            <param name="isBinary">Determines if data file should be binary or ASCII - defaults to <c>true</c> for binary.</param>
            <param name="timeFactor">Time factor to use in schema - defaults to 1000.</param>
            <param name="samplingRate">Desired sampling rate - defaults to 33.3333Hz.</param>
            <param name="nominalFrequency">Nominal frequency - defaults to 60Hz.</param>
            <param name="includeFracSecDefinition">Determines if the FRACSEC word digital definitions should be included - defaults to <c>true</c>.</param>
            <returns>New COMTRADE configuration <see cref="T:Comtrade.Schema"/>.</returns>
            <remarks>
            This function is primarily intended to create a configuration based on synchrophasor data
            (see Annex H: Schema for Phasor Data 2150 Using the COMTRADE File Standard in IEEE C37.111-2010),
            it may be necessary to manually create a schema object for other COMTRADE needs. You can call
            the <see cref="P:Comtrade.Schema.FileImage"/> property to return a string that that can be written to a file
            that will be the contents of the configuration file.
            </remarks>
        </member>
        <member name="M:Comtrade.Writer.WriteNextRecordAscii(System.IO.StreamWriter,Comtrade.Schema,GSF.Ticks,System.Double[],System.UInt32,System.Boolean,System.UInt16)">
            <summary>
            Writes next COMTRADE record in ASCII format.
            </summary>
            <param name="output">Destination stream.</param>
            <param name="schema">Source schema.</param>
            <param name="timestamp">Record timestamp (implicitly castable as <see cref="T:System.DateTime"/>).</param>
            <param name="values">Values to write - 16-bit digitals should exist as a word in an individual double value, method will write out bits.</param>
            <param name="sample">User incremented sample index.</param>
            <param name="injectFracSecValue">Determines if FRACSEC value should be automatically injected into stream as first digital - defaults to <c>true</c>.</param>
            <param name="fracSecValue">FRACSEC value to inject into output stream - defaults to 0x0000.</param>
            <remarks>
            This function is primarily intended to write COMTRADE ASCII data records based on synchrophasor data
            (see Annex H: Schema for Phasor Data 2150 Using the COMTRADE File Standard in IEEE C37.111-2010),
            it may be necessary to manually write records for other COMTRADE needs (e.g., non 16-bit digitals).
            </remarks>
        </member>
        <member name="M:Comtrade.Writer.WriteNextRecordBinary(System.IO.Stream,Comtrade.Schema,GSF.Ticks,System.Double[],System.UInt32,System.Boolean,System.UInt16)">
            <summary>
            Writes next COMTRADE record in binary format.
            </summary>
            <param name="output">Destination stream.</param>
            <param name="schema">Source schema.</param>
            <param name="timestamp">Record timestamp (implicitly castable as <see cref="T:System.DateTime"/>).</param>
            <param name="values">Values to write - 16-bit digitals should exist as a word in an individual double value.</param>
            <param name="sample">User incremented sample index.</param>
            <param name="injectFracSecValue">Determines if FRACSEC value should be automatically injected into stream as first digital - defaults to <c>true</c>.</param>
            <param name="fracSecValue">FRACSEC value to inject into output stream - defaults to 0x0000.</param>
            <remarks>
            This function is primarily intended to write COMTRADE binary data records based on synchrophasor data
            (see Annex H: Schema for Phasor Data 2150 Using the COMTRADE File Standard in IEEE C37.111-2010),
            it may be necessary to manually write records for other COMTRADE needs (e.g., non 16-bit digitals).
            </remarks>
        </member>
    </members>
</doc>
